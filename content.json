{"meta":{"title":"Hexo","subtitle":"","description":"","author":"Hui","url":"http://example.com","root":"/"},"pages":[],"posts":[{"title":"React Hooks网站开发实战","slug":"React-Hooks网站开发实战","date":"2021-02-27T13:13:05.000Z","updated":"2021-03-03T07:34:06.439Z","comments":true,"path":"2021/02/27/React-Hooks网站开发实战/","link":"","permalink":"http://example.com/2021/02/27/React-Hooks%E7%BD%91%E7%AB%99%E5%BC%80%E5%8F%91%E5%AE%9E%E6%88%98/","excerpt":"1. 项目前端开发环境搭建1.安装 Next.js 的脚手架工具 create-next-app : npm install -g create-next-app2.创建总目录文件夹: mkdir react_blog3.进入总目录文件夹,使用npx安装前端目录文件夹: - cd react_blog - npx create-next-app blog4.测试: yarn dev (http://localhost:3000/ 查看)5.用VSCode打开blog,删除不需要的默认文件和代码6.修改首页page/index.js import React from &#39;react&#39; import Head from &#39;next/head&#39; const Home = () =&gt; ( &lt;&gt; &lt;Head&gt; &lt;title&gt;Home&lt;/title&gt; &lt;/Head&gt; &lt;/&gt; ) export default Home","text":"1. 项目前端开发环境搭建1.安装 Next.js 的脚手架工具 create-next-app : npm install -g create-next-app2.创建总目录文件夹: mkdir react_blog3.进入总目录文件夹,使用npx安装前端目录文件夹: - cd react_blog - npx create-next-app blog4.测试: yarn dev (http://localhost:3000/ 查看)5.用VSCode打开blog,删除不需要的默认文件和代码6.修改首页page/index.js import React from &#39;react&#39; import Head from &#39;next/head&#39; const Home = () =&gt; ( &lt;&gt; &lt;Head&gt; &lt;title&gt;Home&lt;/title&gt; &lt;/Head&gt; &lt;/&gt; ) export default Home 7.安装@zeit/next-css包，让Next.js可以加载CSS文件:yarn add @zeit/next-css8.blog目录下，新建一个next.config.js文件。这个就是Next.js的总配置文件。写入下面的代码: const withCss = require(&#39;@zeit/next-css&#39;) if(typeof require !== &#39;undefined&#39;)&#123; require.extensions[&#39;.css&#39;]=file=&gt;&#123;&#125; &#125; module.exports = withCss(&#123;&#125;) 9.按需加载 Ant Design - yarn add antd - yarn add babel-plugin-import - blog目录建立.babelrc文件，然后写入如下配置文件 &#123; &quot;presets&quot;:[&quot;next/babel&quot;], //Next.js的总配置文件，相当于继承了它本身的所有配置 &quot;plugins&quot;:[ //增加新的插件，这个插件就是让antd可以按需引入，包括CSS [ &quot;import&quot;, &#123; &quot;libraryName&quot;:&quot;antd&quot; &#125; ] ] &#125; - 在pages目录下，新建一个_app.js文件，然后把CSS进行全局引入 import App from &#39;next/app&#39; import &#39;antd/dist/antd.css&#39; export default App 2. 公用背景和头部组件1.在style文件夹下新建两个文件夹/pages和/components，然后在/pages文件夹下新建立comm.css文件。以后只要每个页面都用到的CSS样式，都放入这个文件中。建立文件后，写入下面的CSS样式，就是把背景设置成浅灰色。 body&#123; background-color: #f6f6f6; &#125; 2.修改/pages/_app.js引入这个CSS，这个文件引入后，每个页面都会起作用 import App from &#39;next/app&#39; import &#39;antd/dist/antd.css&#39; import &#39;../static/style/pages/comm.css&#39; export default App 3.组件开发 -头部组件(Header.js) -先在/blog/components/目录下新建一个Header.js文件 import React from ‘react’ import &#39;../styles/components/header.css&#39; import&#123;Row,Col,Menu&#125;from &#39;antd&#39; import &#123;HomeOutlined,SmileOutlined&#125; from &#39;@ant-design/icons&#39; const Header=()=&gt;( &lt;div className=&quot;header&quot;&gt; &lt;Row type=&quot;flex&quot; justify=&quot;center&quot;&gt; &lt;Col xs=&#123;24&#125; sm=&#123;24&#125; md=&#123;10&#125; lg=&#123;15&#125; xl=&#123;12&#125;&gt; &lt;span className=&quot;header-logo&quot;&gt;慧慧慧&lt;/span&gt; &lt;span className=&quot;header-txt&quot;&gt;记录我敲的代码,主要是前端开发 &lt;/span&gt; &lt;/Col&gt; &lt;Col className=&quot;menu-div&quot; xs=&#123;0&#125; sm=&#123;0&#125; md=&#123;14&#125; lg=&#123;8&#125; xl=&#123;6&#125;&gt; &lt;Menu mode=&quot;horizontal&quot;&gt; &lt;Menu.Item key=&quot;home&quot;&gt; &lt;HomeOutlined /&gt; 首页 &lt;/Menu.Item&gt; &lt;Menu.Item key=&quot;react&quot;&gt; &lt;SmileOutlined /&gt; React &lt;/Menu.Item&gt; &lt;Menu.Item key=&quot;other&quot;&gt; &lt;SmileOutlined /&gt; 博客搭建 &lt;/Menu.Item&gt; &lt;/Menu&gt; &lt;/Col&gt; &lt;/Row&gt; &lt;/div&gt; ) export default Header -然后建立/style/components/header.css,用来编写CSS文件 .header&#123; background-color: #fff; padding: .4rem; overflow: hidden; height: 3.2rem; border-bottom:1px solid #eee; &#125; .header-logo&#123; color:#1e90ff; font-size: 1.45rem; text-align: left; &#125; .header-txt&#123; font-size: 0.6rem; color: #999; display: inline-block; padding-left: 0.4rem; &#125; .ant-meu&#123; line-height: 2.8rem; &#125; .ant-menu-item&#123; font-size:1rem !important; padding-left:1rem; padding-right:1rem; color: #999; &#125; -把Header.js文件引入到首页 import Header from &#39;../components/Header&#39; 3. 首页和其他页面的主体两栏布局1.首页(index.js) import React from &#39;react&#39; import Head from &#39;next/head&#39; import &#123;Row, Col&#125; from &#39;antd&#39; import Header from &#39;../components/Header&#39; const Home = () =&gt; ( &lt;&gt; &lt;Head&gt; &lt;title&gt;首页_慧慧慧&lt;/title&gt; &lt;/Head&gt; &lt;Header /&gt; &lt;Row className=&quot;comm-main&quot; type=&quot;flex&quot; justify=&quot;center&quot;&gt; &lt;Col className=&quot;comm-left&quot; xs=&#123;24&#125; sm=&#123;24&#125; md=&#123;16&#125; lg=&#123;18&#125; xl=&#123;14&#125; &gt; 左侧 &lt;/Col&gt; &lt;Col className=&quot;comm-right&quot; xs=&#123;0&#125; sm=&#123;0&#125; md=&#123;7&#125; lg=&#123;5&#125; xl=&#123;4&#125;&gt; 右侧 &lt;/Col&gt; &lt;/Row&gt; &lt;/&gt; ) export default Home 2.CSS样式写在公用的comm.css里 body&#123; background-color: #f6f6f6; &#125; .comm-left&#123; background-color: #FFF; padding:.3rem; border-radius: .3rem; border-bottom:1px solid #eee; &#125; .comm-box&#123; background-color: #FFF; margin-left: .5rem; padding:.3rem; border-radius: .3rem; border-bottom:1px solid #eee; &#125; .comm-main&#123; margin-top: .5rem; &#125; 3.其他页面-Pages目录新建list.js和detailed.js文件，然后把index.js代码复制到里边，并进行简单的修改-list.js import React from &#39;react&#39; import Head from &#39;next/head&#39; import &#123;Row, Col&#125; from &#39;antd&#39; import Header from &#39;../components/Header&#39; const List = () =&gt; ( &lt;&gt; &lt;Head&gt; &lt;title&gt;List_慧慧慧&lt;/title&gt; &lt;/Head&gt; &lt;Header /&gt; &lt;Row className=&quot;comm-main&quot; type=&quot;flex&quot; justify=&quot;center&quot;&gt; &lt;Col className=&quot;comm-left&quot; xs=&#123;24&#125; sm=&#123;24&#125; md=&#123;16&#125; lg=&#123;18&#125; xl=&#123;14&#125; &gt; 左侧 &lt;/Col&gt; &lt;Col className=&quot;comm-right&quot; xs=&#123;0&#125; sm=&#123;0&#125; md=&#123;7&#125; lg=&#123;5&#125; xl=&#123;4&#125;&gt; 右侧 &lt;/Col&gt; &lt;/Row&gt; &lt;/&gt; ) export default List -detailed.js import React from &#39;react&#39; import Head from &#39;next/head&#39; import &#123;Row, Col&#125; from &#39;antd&#39; import Header from &#39;../components/Header&#39; const Detailed = () =&gt; ( &lt;&gt; &lt;Head&gt; &lt;title&gt;Detailed&lt;/title&gt; &lt;/Head&gt; &lt;Header /&gt; &lt;Row className=&quot;comm-main&quot; type=&quot;flex&quot; justify=&quot;center&quot;&gt; &lt;Col className=&quot;comm-left&quot; xs=&#123;24&#125; sm=&#123;24&#125; md=&#123;16&#125; lg=&#123;18&#125; xl=&#123;14&#125; &gt; 左侧 &lt;/Col&gt; &lt;Col className=&quot;comm-right&quot; xs=&#123;0&#125; sm=&#123;0&#125; md=&#123;7&#125; lg=&#123;5&#125; xl=&#123;4&#125;&gt; 右侧 &lt;/Col&gt; &lt;/Row&gt; &lt;/&gt; ) export default Detailed 4. Author组件1.在/components文件夹下面，新建一个Author.js文件 import &#123;Avatar,Divider&#125; from &#39;antd&#39; import &#123; WechatOutlined,QqOutlined, GithubOutlined&#125; from &#39;@ant-design/icons&#39;; import &#39;../styles/components/author.css&#39; const Author =()=&gt;&#123; return ( &lt;div className=&quot;author-div comm-box&quot;&gt; &lt;div&gt; &lt;Avatar size=&#123;100&#125; src= &quot;skill1.png&quot; /&gt;&lt;/div&gt; &lt;div className=&quot;author-introduction&quot;&gt; &lt;div&gt;Hey!我是慧慧慧&lt;/div&gt; &lt;div&gt;很惭愧,只做了一点微小的工作,谢谢大家~~&lt;/div&gt; &lt;Divider&gt;社交账号&lt;/Divider&gt; &lt;Avatar size=&#123;28&#125; icon=&#123;&lt;GithubOutlined /&gt;&#125; className=&quot;account&quot; /&gt; &lt;Avatar size=&#123;28&#125; icon=&#123;&lt;QqOutlined /&gt;&#125; className=&quot;account&quot; /&gt; &lt;Avatar size=&#123;28&#125; icon=&#123;&lt;WechatOutlined /&gt;&#125; className=&quot;account&quot; /&gt; &lt;/div&gt; &lt;/div&gt; ) &#125; export default Author 2.styles/components/author.css .author-div&#123; text-align: center; padding: 1rem; &#125; .author-div div&#123; margin-bottom: 1rem; &#125; .author-introduction&#123; font-size:.8rem; color: #999; &#125; .account&#123; background-color: #999; margin-left: .5rem; margin-right: .5rem; &#125; 3.把Author.js文件引入到首页 import Author from &#39;../components/Author&#39; 5. 底部组件(Footer.js)1.在/components目录下，新建立一个Footer.js的文件 import &#39;../styles/components/footer.css&#39; const Footer=()=&gt;( &lt;div className=&quot;footer-div&quot;&gt; &lt;div&gt;系统由 React+Node+Ant Desgin驱动 &lt;/div&gt; &lt;div&gt;慧慧慧&lt;/div&gt; &lt;/div&gt; ) export default Footer 2.styles/components/footer.css .footer-div&#123; text-align: center; width: 100%; padding: 1rem; color:#888; &#125; 3.把Footer.js文件引入首页 import Footer from &#39;../components/Footer&#39; 6. 首页列表部分和列表页面(List.js)1.index.js引入Ant Design的List组件和图标 import &#123;Row,Col,List&#125; from &#39;antd&#39; import &#123;CalendarOutlined,FolderOutlined,FireOutlined&#125; from &#39;@ant-design/icons&#39; 2.引入useState import React,&#123;useState&#125; from &#39;react&#39; 3.用useState在index.js中写列表内容 const [mylist,setMylist]=useState( [ &#123;title:&#39;React Hooks 网站开发实战&#39;,context:&#39;1. 项目前端开发环境搭建 2. 公用背景和头部组件 3. 首页和其他页面的主体两栏布局 4. Author组件 5. 底部组件(Footer.js) 6. 首页列表部分和列表页面(List.js) ...&#39;&#125;, &#123;title:&#39;从零开始搭建个人Hexo博客&#39;,context:&#39;1. 环境准备 2. 安装hexo博客框架 3. 使用hexo搭建博客 4. 把博客部署到github 5. 自定义博客主题 ...&#39;&#125;, &#123;title:&#39;React Hooks 网站开发实战&#39;,context:&#39;1. 项目前端开发环境搭建 2. 公用背景和头部组件 3. 首页和其他页面的主体两栏布局 4. Author组件 5. 底部组件(Footer.js) 6. 首页列表部分和列表页面(List.js) ...&#39;&#125;, &#123;title:&#39;从零开始搭建个人Hexo博客&#39;,context:&#39;1. 环境准备 2. 安装hexo博客框架 3. 使用hexo搭建博客 4. 把博客部署到github 5. 自定义博客主题 ...&#39;&#125;, &#123;title:&#39;React Hooks 网站开发实战&#39;,context:&#39;1. 项目前端开发环境搭建 2. 公用背景和头部组件 3. 首页和其他页面的主体两栏布局 4. Author组件 5. 底部组件(Footer.js) 6. 首页列表部分和列表页面(List.js) ...&#39;&#125;, &#123;title:&#39;从零开始搭建个人Hexo博客&#39;,context:&#39;1. 环境准备 2. 安装hexo博客框架 3. 使用hexo搭建博客 4. 把博客部署到github 5. 自定义博客主题 ...&#39;&#125;, ] ) 4.在/style/pages文件夹下，新建index.css文件 .list-title&#123; font-size:1.3rem; color: #1e90ff; padding: 0 0.5rem; &#125; .list-context&#123; color:#777; padding:.5rem; &#125; .list-icon&#123; padding:.5rem 0; color:#AAA; &#125; .list-icon span&#123; display: inline-block; padding: 0 10px; &#125; 5.index.js中引入index.css import &#39;../style/pages/index.css&#39; 6.在/style/pages文件夹下，新建list.css文件,拷贝index.css到list.css里-list.css .list-title&#123; font-size:1.3rem; color: #1e90ff; padding: 0 0.5rem; &#125; .list-context&#123; color:#777; padding:.5rem; &#125; .list-icon&#123; padding:.5rem 0; color:#AAA; &#125; .list-icon span&#123; display: inline-block; padding: 0 10px; &#125; 7.把首页的代码index.js，拷贝到list.js页面中，然后把index.css的引入改成list.css。 import &#39;../styles/pages/list.css&#39; 8.用Ant Design自带的Breadcrumb写面包屑导航了-先引入 import &#123;Row,Col,List,Breadcrumb&#125; from &#39;antd&#39; -面包屑导航 &lt;div className=&quot;bread-div&quot;&gt; &lt;Breadcrumb&gt; &lt;Breadcrumb.Item&gt;&lt;a href=&quot;/&quot;&gt;首页&lt;/a&gt;&lt;/Breadcrumb.Item&gt; &lt;Breadcrumb.Item&gt;React&lt;/Breadcrumb.Item&gt; &lt;/Breadcrumb&gt; &lt;/div&gt; 9.修改一下的内容以符合列表页面-list.js import React,&#123;useState&#125; from &#39;react&#39; import Head from &#39;next/head&#39; import &#123;Row,Col,List,Breadcrumb&#125; from &#39;antd&#39; import &#123;CalendarOutlined,FolderOutlined,FireOutlined&#125; from &#39;@ant-design/icons&#39; import Header from &#39;../components/Header&#39; import Author from &#39;../components/Author&#39; import Footer from &#39;../components/Footer&#39; import &#39;../styles/pages/list.css&#39; export default function Mylist() &#123; const [mylist,setMylist]=useState( [ &#123;title:&#39;React Hooks 网站开发实战&#39;,context:&#39;1. 项目前端开发环境搭建 2. 公用背景和头部组件 3. 首页和其他页面的主体两栏布局 4. Author组件 5. 底部组件(Footer.js) 6. 首页列表部分和列表页面(List.js) ...&#39;&#125;, &#123;title:&#39;从零开始搭建个人Hexo博客&#39;,context:&#39;1. 环境准备 2. 安装hexo博客框架 3. 使用hexo搭建博客 4. 把博客部署到github 5. 自定义博客主题 ...&#39;&#125;, &#123;title:&#39;React Hooks 网站开发实战&#39;,context:&#39;1. 项目前端开发环境搭建 2. 公用背景和头部组件 3. 首页和其他页面的主体两栏布局 4. Author组件 5. 底部组件(Footer.js) 6. 首页列表部分和列表页面(List.js) ...&#39;&#125;, &#123;title:&#39;从零开始搭建个人Hexo博客&#39;,context:&#39;1. 环境准备 2. 安装hexo博客框架 3. 使用hexo搭建博客 4. 把博客部署到github 5. 自定义博客主题 ...&#39;&#125;, &#123;title:&#39;React Hooks 网站开发实战&#39;,context:&#39;1. 项目前端开发环境搭建 2. 公用背景和头部组件 3. 首页和其他页面的主体两栏布局 4. Author组件 5. 底部组件(Footer.js) 6. 首页列表部分和列表页面(List.js) ...&#39;&#125;, &#123;title:&#39;从零开始搭建个人Hexo博客&#39;,context:&#39;1. 环境准备 2. 安装hexo博客框架 3. 使用hexo搭建博客 4. 把博客部署到github 5. 自定义博客主题 ...&#39;&#125;, ] ) return ( &lt;div&gt; &lt;Head&gt; &lt;title&gt;List_慧慧慧&lt;/title&gt; &lt;/Head&gt; &lt;Header /&gt; &lt;Row className=&quot;comm-main&quot; type=&quot;flex&quot; justify=&quot;center&quot;&gt; &lt;Col className=&quot;comm-left&quot; xs=&#123;24&#125; sm=&#123;24&#125; md=&#123;16&#125; lg=&#123;18&#125; xl=&#123;14&#125;&gt; &lt;div&gt; &lt;div className=&quot;bread-div&quot;&gt; &lt;Breadcrumb&gt; &lt;Breadcrumb.Item&gt;&lt;a href=&quot;/&quot;&gt;首页&lt;/a&gt;&lt;/Breadcrumb.Item&gt; &lt;Breadcrumb.Item&gt;React&lt;/Breadcrumb.Item&gt; &lt;/Breadcrumb&gt; &lt;/div&gt; &lt;List itemLayout=&quot;vertical&quot; dataSource=&#123;mylist&#125; renderItem=&#123;item=&gt;( &lt;List.Item&gt; &lt;div className=&quot;list-title&quot;&gt;&#123;item.title&#125;&lt;/div&gt; &lt;div className=&quot;list-icon&quot;&gt; &lt;span&gt;&lt;CalendarOutlined /&gt;2021-02-21&lt;/span&gt; &lt;span&gt;&lt;FolderOutlined /&gt;React&lt;/span&gt; &lt;span&gt;&lt;FireOutlined /&gt;6666&lt;/span&gt; &lt;/div&gt; &lt;div className=&quot;list-context&quot;&gt;&#123;item.context&#125;&lt;/div&gt; &lt;/List.Item&gt; )&#125; /&gt; &lt;/div&gt; &lt;/Col&gt; &lt;Col className=&quot;comm-right&quot; xs=&#123;0&#125; sm=&#123;0&#125; md=&#123;7&#125; lg=&#123;5&#125; xl=&#123;4&#125;&gt; &lt;Author /&gt; &lt;/Col&gt; &lt;/Row&gt; &lt;Footer /&gt; &lt;/div&gt; ) &#125; 7. 详细页面(detailed.js)的基本页面结构1.在/style/pages文件夹下建立detailed.css文件 .bread-div&#123; padding: .5rem; border-bottom:1px solid #eee; background-color: #e1f0ff; &#125; .detailed-title&#123; font-size: 1.8rem; text-align: center; padding: 1rem; &#125; .center&#123; text-align: center; &#125; .detailed-content&#123; padding: 1.3rem; font-size: 1rem; &#125; code &#123; display: block ; background-color:#f3f3f3; padding: .5rem !important; overflow-y: auto; font-weight: 300; font-family: Menlo, monospace; border-radius: .3rem; &#125; .title-anchor&#123; color:#888 !important; padding:4px !important; margin: 0rem !important; height: auto !important; line-height: 1.2rem !important; font-size: .9rem !important; border-bottom: 1px dashed #eee; &#125; .active&#123; color:rgb(30, 144, 255) !important; &#125; .nav-title&#123; text-align: center; color: #888; border-bottom: 1px solid rgb(30, 144, 255); &#125; 2.打开detailed.js，引入detailed.css和其他组件 import React,&#123;useState&#125; from &#39;react&#39; import Head from &#39;next/head&#39; import &#123;Row,Col,Breadcrumb&#125; from &#39;antd&#39; import &#123;CalendarOutlined,FolderOutlined,FireOutlined&#125; from &#39;@ant-design/icons&#39; import Header from &#39;../components/Header&#39; import Author from &#39;../components/Author&#39; import Footer from &#39;../components/Footer&#39; import &#39;../styles/pages/detailed.css&#39; 3.修改一下内容以符合该页面 export default function Detailed() &#123; return ( &lt;div&gt; &lt;Head&gt; &lt;title&gt;React Hooks 网站开发实战_慧慧慧&lt;/title&gt; &lt;/Head&gt; &lt;Header /&gt; &lt;Row className=&quot;comm-main&quot; type=&quot;flex&quot; justify=&quot;center&quot;&gt; &lt;Col className=&quot;comm-left&quot; xs=&#123;24&#125; sm=&#123;24&#125; md=&#123;16&#125; lg=&#123;18&#125; xl=&#123;14&#125;&gt; &lt;div&gt; &lt;div className=&quot;bread-div&quot;&gt; &lt;Breadcrumb&gt; &lt;Breadcrumb.Item&gt;&lt;a href=&quot;/&quot;&gt;首页&lt;/a&gt;&lt;/Breadcrumb.Item&gt; &lt;Breadcrumb.Item&gt;React&lt;/Breadcrumb.Item&gt; &lt;Breadcrumb.Item&gt;React Hooks 网站开发实战&lt;/Breadcrumb.Item&gt; &lt;/Breadcrumb&gt; &lt;/div&gt; &lt;div&gt; &lt;div className=&quot;detailed-title&quot;&gt; React Hooks 网站开发实战 &lt;/div&gt; &lt;div className=&quot;list-icon center&quot;&gt; &lt;span&gt;&lt;CalendarOutlined /&gt;2021-02-21&lt;/span&gt; &lt;span&gt;&lt;FolderOutlined /&gt;React&lt;/span&gt; &lt;span&gt;&lt;FireOutlined /&gt;5498&lt;/span&gt; &lt;/div&gt; &lt;div className=&quot;detailed-content&quot; &gt; 文章内容 &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/Col&gt; &lt;Col className=&quot;comm-right&quot; xs=&#123;0&#125; sm=&#123;0&#125; md=&#123;7&#125; lg=&#123;5&#125; xl=&#123;4&#125;&gt; &lt;Author/&gt; &lt;/Col&gt; &lt;/Row&gt; &lt;Footer/&gt; &lt;/div&gt; ) &#125; 8. 详细页面(detailed.js)解析Markdown语法1.安装react-markdown:yarn add react-markdown2.detailed.js中引入:import ReactMarkdown from &#39;react-markdown&#39;3.设置react-markdown source 属性从 .md 文件中获取内容: -设置 webpack 支持.md 文件,先安装加载器raw-loader : npm install -D raw-loader yarn add -D raw-loader -blog目录下新建文件夹 md ,将写好的Markdown文件放入,在detailed.js里面,内联使用加载器 import ReacthooksMd from &#39;raw-loader!../md/reacthooks.md&#39; 4.使用react-markdown渲染markdown文件 &lt;div className=&quot;detailed-content&quot; &gt; &lt;ReactMarkdown source=&#123;ReacthooksMd&#125; escapeHtml=&#123;false&#125; /&gt; &lt;/div&gt; 9. 详细页面(detailed.js)的Markdown导航1.markdown-navbar的安装与使用: yarn add markdown-navbar2.detailed.js中引入markdown-navbar及其css import MarkNav from &#39;markdown-navbar&#39; import &#39;markdown-navbar/dist/navbar.css&#39; 3.Markdown导航 &lt;div className=&quot;detailed-nav comm-box&quot;&gt; &lt;div className=&quot;nav-title&quot;&gt;文章目录&lt;/div&gt; &lt;MarkNav className=&quot;article-menu&quot; source=&#123;ReacthooksMd&#125; ordered=&#123;false&#125; /&gt; &lt;/div&gt; 4.让导航一直在页面右侧的固钉 -引入Affix import &#123;Row,Col,Affix,Breadcrumb&#125; from &#39;antd&#39; -在需要固钉的外层加上Affix组件 &lt;Affix offsetTop=&#123;5&#125;&gt; &lt;div className=&quot;detailed-nav comm-box&quot;&gt; &lt;div className=&quot;nav-title&quot;&gt;文章目录&lt;/div&gt; &lt;MarkNav className=&quot;article-menu&quot; source=&#123;ReacthooksMd&#125; ordered=&#123;false&#125; /&gt; &lt;/div&gt; &lt;/Affix&gt; 10. 实现各页面之间路由跳转1.在需要实现跳转的页面或者组件中引入import Router from &#39;next/router&#39;或者import Link from &#39;next/link&#39;2.在需要跳转的位置写入onClick=&#123;()=&gt;&#123;Router.push(&#39;/&#39;)&#125;&#125;或者&lt; Link href=&quot;/&quot;&gt;&lt;a&gt;首页&lt;/a&gt; 如: import Link from &#39;next/link&#39; &lt;div className=&quot;bread-div&quot;&gt; &lt;Breadcrumb&gt; &lt;Breadcrumb.Item&gt;&lt; Link href=&quot;/&quot;&gt;&lt;a&gt;首页&lt;/a&gt;&lt;/ Link&gt;&lt;/Breadcrumb.Item&gt; &lt;Breadcrumb.Item&gt;&lt; Link href=&quot;/list&quot;&gt;&lt;a&gt;React&lt;/a&gt;&lt;/ Link&gt;&lt;/Breadcrumb.Item&gt; &lt;Breadcrumb.Item&gt;React Hooks 网站开发实战&lt;/Breadcrumb.Item&gt; &lt;/Breadcrumb&gt; &lt;/div&gt; 如: import Router from &#39;next/router&#39; &lt;Col className=&quot;menu-div&quot; xs=&#123;0&#125; sm=&#123;0&#125; md=&#123;14&#125; lg=&#123;8&#125; xl=&#123;6&#125;&gt; &lt;Menu mode=&quot;horizontal&quot;&gt; &lt;Menu.Item key=&quot;home&quot; onClick=&#123;()=&gt;&#123;Router.push(&#39;/&#39;)&#125;&#125;&gt; &lt;HomeOutlined /&gt; 首页 &lt;/Menu.Item&gt; &lt;Menu.Item key=&quot;react&quot;onClick=&#123;()=&gt;&#123;Router.push(&#39;list&#39;)&#125;&#125;&gt; &lt;SmileOutlined /&gt; React &lt;/Menu.Item&gt; &lt;Menu.Item key=&quot;other&quot; onClick=&#123;()=&gt;&#123;Router.push(&#39;list&#39;)&#125;&#125;&gt; &lt;SmileOutlined /&gt; 博客搭建 &lt;/Menu.Item&gt; &lt;/Menu&gt; &lt;/Col&gt; 11. 未完待续… 至此,网站前端部分就已经基本完成了,有时间再来续后端部分~~ 来一个暂时告一段落的完结撒花吧~~~~~~~~","categories":[],"tags":[{"name":"React","slug":"React","permalink":"http://example.com/tags/React/"}]},{"title":"Gitee部署","slug":"Gitee部署","date":"2021-02-26T13:43:10.000Z","updated":"2021-02-26T13:44:56.560Z","comments":true,"path":"2021/02/26/Gitee部署/","link":"","permalink":"http://example.com/2021/02/26/Gitee%E9%83%A8%E7%BD%B2/","excerpt":"","text":"生成/添加SSH公钥Gitee 提供了基于SSH协议的Git服务，在使用SSH协议访问仓库仓库之前，需要先配置好账户/仓库的SSH公钥。 生成sshkey:ssh-keygen -t rsa -C &quot;xxxxx@xxxxx.com&quot; 查看 ~/.ssh/id_rsa.pub 文件内容，获取到public key:cat ~/.ssh/id_rsa.pub 复制生成后的ssh key,在「我的」-&gt;「设置」-&gt;「安全设置」-&gt;「ssh公钥」里粘贴,标题在粘贴后会自动生成邮箱地址. 测试:ssh -T git@gitee.com 首次使用需要确认并添加主机到本机SSH可信列表。 若返回 Hi XXX! You’ve successfully authenticated, but Gitee.com does not provide shell access. 内容，则证明添加成功。 Gitee官方说明:https://gitee.com/help/articles/4181#article-header0 新建gitee远程仓库 填写仓库名称,会自动生成路径,然后填写仓库介绍(非必填). 选择是否开源. 选择语言. 选择添加.gitignore模板.(.gitignore文件用于在提交项目文件时过滤一些不需要的文件。比如我们项目中的npm包(node_modules)，它在我们项目中是很重要的，但是它占的内存也是很大的，所以一般我们用Git管理的时候就考虑不添加npm包的。) 在当前目录新建一个Git代码库 git init (会新建一个隐藏文件git到当前目录) 添加当前目录的所有文件到暂存区 git add . 查看信息,显示有变更的文件:git status 提交暂存区到仓库区 git commit -m &quot;message&quot; 本地库关联远程库git remote add origin 复制gitee仓库ssh到此处 上传本地指定分支到远程仓库 建立远程分支 main 并将远程 main 分支和本地 main 分支相关联:git push --set-upstream origin main (一般新建的分支在push的时候都需要执行这个命令和远端相关联) 再执行 git push","categories":[],"tags":[{"name":"Git","slug":"Git","permalink":"http://example.com/tags/Git/"}]},{"title":"从零开始搭建个人博客","slug":"从零开始搭建个人博客","date":"2021-02-11T09:27:41.000Z","updated":"2021-02-28T04:56:36.412Z","comments":true,"path":"2021/02/11/从零开始搭建个人博客/","link":"","permalink":"http://example.com/2021/02/11/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/","excerpt":"","text":"1. 环境准备 node.js git 2. 安装hexo博客框架 安装命令行: cnpm install -g hexo-cli 查看版本: hexo -v 3. 使用hexo搭建博客 建立项目文件夹: mkdir 文件夹名字(如:mkdir blog) 进入项目文件夹: cd 文件夹名字(如:cd blog) 使用hexo生成博客(初始化博客): sudo hexo init (sudo表示用管理员命令来执行) 启动博客: hexo s ( localhost:4000 查看) 创建文章: hexo n &quot;你的文章标题&quot; 编辑文章: 使用vim、Markdown编辑器或者VSCode编辑 重新生成文章: 回到项目文件夹目录下,先清理 hexo clean,再重生成 hexo g 4. 把博客部署到github github注册(注意:注册的账户名在下一步要用在仓库名字上,而仓库名字是你的博客网址,好好起名字哦~) 新建一个github仓库(Create a new repository) 仓库名字(Repository name):命名格式必须是” github账户名.github.io “ 描述是可选项 在项目文件夹下安装git部署的插件: cnpm install --save hexo-deployer-git 设置_config.yml文件.在项目文件夹目录下找到_config.yml文件,使用vscode等编辑器打开.按照如下配置Deployment: type: git repo: 你的github仓库地址 branch: master 部署到远端: hexo d(中途会要求输入github账号密码) 访问博客:你的仓库名字就是博客网址 5. 自定义博客主题 找到喜欢的主题 下载主题: git clone 主题网址 themes/主题名字 修改主题: _config.yml文件里找到theme,修改成 theme: 主题名 推到远端: hexo d","categories":[],"tags":[{"name":"博客搭建","slug":"博客搭建","permalink":"http://example.com/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"}]},{"title":"Hello World","slug":"hello-world","date":"2021-02-03T13:46:12.004Z","updated":"2021-02-03T13:46:12.005Z","comments":true,"path":"2021/02/03/hello-world/","link":"","permalink":"http://example.com/2021/02/03/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[],"tags":[{"name":"React","slug":"React","permalink":"http://example.com/tags/React/"},{"name":"Git","slug":"Git","permalink":"http://example.com/tags/Git/"},{"name":"博客搭建","slug":"博客搭建","permalink":"http://example.com/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"}]}